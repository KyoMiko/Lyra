name: Trigger

on:
  workflow_dispatch:
  schedule:
    - cron: "33 17 * * *"

env:
  GIT_EMAIL: ${{ secrets.GIT_EMAIL }}
  GIT_USERNAME: ${{ secrets.GIT_USERNAME }}

jobs:
  check_update:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0
          fetch-tags: true
          persist-credentials: false
      - name: run script
        run: |
          ORIGIN_TAG=$(curl -s https://api.github.com/repos/DoL-Lyra/Lyra/releases/latest | jq -r '.tag_name')
          CHS_VER=$(echo $ORIGIN_TAG | cut -d '-' -f2)
          MODS_VER=$(git tag --sort=-v:refname | head -n 1 | cut -d '-' -f2)

          if [[ "$CHS_VER" != "$MODS_VER" ]]
          then
            echo "Update needed"
            echo "NEED_UPDATE=true" >> "$GITHUB_ENV"

            NEW_VER="${ORIGIN_TAG//'chs-'/}"
            DATE=$(date -d "+8 hours" +%m%d)
            NEW_TAG=${NEW_VER}-${DATE}

            echo $NEW_TAG
            echo "NEW_TAG=$NEW_TAG" >> "$GITHUB_ENV"
          else
            echo "Already updated"
            echo "NEED_UPDATE=false" >> "$GITHUB_ENV"
          fi

      - name: Create tag
        if: env.NEED_UPDATE == 'true'
        uses: softprops/action-gh-release@v1
        with:
          tag_name: ${{ env.NEW_TAG }}
          draft: true

      - name: Create and push tag
        if: env.NEED_UPDATE == 'true'
        run: |
          git config user.email "${{ secrets.GIT_EMAIL }}"
          git config user.name "${{ secrets.GIT_USERNAME }}"
          git config pull.rebase false
          git remote set-url origin https://${{ secrets.PAT_TOKEN }}@github.com/${{ github.repository }}
          # 添加上游远程仓库
          git remote add upstream https://github.com/DoL-Lyra/Lyra.git
          git fetch upstream
          
          # 更新main分支
          git checkout main
          git pull upstream main
          git push origin main
          
          # 更新hub分支
          git checkout --track origin/hub
          git pull upstream hub
          git push origin hub
          
          # 回到之前的分支创建标签
          git checkout main
          git commit --allow-empty -m ${{ env.NEW_TAG }}
          git push origin
          git tag ${{ env.NEW_TAG }}
          git push origin ${{ env.NEW_TAG }}
